name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: 'Release tag (e.g., v1.0.0)'

permissions:
  contents: write
  discussions: write

jobs:
  detekt-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run Detekt
        run: ./gradlew detekt --auto-correct
  windows-build:
    if: ${{ ! failure() }}
    needs: detekt-check
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v5
      - name: set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: BuildKonfig Parameter
        run: Add-Content -Path gradle.properties -Value "buildkonfig.flavor=release"
      - name: Build with Gradle
        run: ./gradlew composeApp:packageReleaseMsi
      - name: Make release directory
        run: mkdir -p release
      - name: Move Linux package to release directory
        run: mv composeApp/build/customOutputDir/main-release/msi/**.msi release/
      - name: Upload Windows package
        uses: actions/upload-artifact@v4
        with:
          name: windows-package
          path: release/**.msi
  linux-build:
    if: ${{ ! failure() }}
    needs: detekt-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: BuildKonfig Parameter
        run: echo "buildkonfig.flavor=release" >> gradle.properties
      - name: Build with Gradle
        run: ./gradlew composeApp:packageReleaseDeb
      - name: Make release directory
        run: mkdir -p release
      - name: Move Linux package to release directory
        run: mv composeApp/build/customOutputDir/main-release/deb/**.deb release/
      - name: Upload Linux package
        uses: actions/upload-artifact@v4
        with:
          name: linux-package
          path: release/**.deb
  create-release:
    if: ${{ ! failure() }}
    needs:
      - linux-build
      - windows-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Download Windows package
        uses: actions/download-artifact@v5
        with:
          name: windows-package
          path: ./release
      - name: Download Linux package
        uses: actions/download-artifact@v5
        with:
          name: linux-package
          path: ./release
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.event.inputs.tag }}
          body: ${{ github.event.inputs.tag }}
          tag_name: ${{ github.event.inputs.tag }}
          files: |
            release/**.msi
            release/**.deb
          make_latest: true
          generate_release_notes: true
